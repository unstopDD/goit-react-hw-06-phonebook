{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","views/PhoneBookViews.js","components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normolizedFilter","toLowerCase","contact","name","includes","contactsActions","addContact","createAction","number","payload","id","shortid","generate","deletContact","changeFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","resetInputForm","checkName","some","trim","className","s","form","onSubmit","e","preventDefault","alert","label","type","value","onChange","target","button","Filter","input","ContactItem","onDeleteContact","item","text","onClick","ContactList","names","list","map","Section","title","children","styles","section","PhoneBookViews","setFilter","length","onChangeFilter","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2642d36d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3-rvr\",\"text\":\"ContactItem_text__QmUXQ\",\"button\":\"ContactItem_button__1B4yJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1hxJ4\",\"title\":\"Section_title__2li-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3-iRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ICrK\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normolizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normolizedFilter),\n  );\n};\n","import shortid from 'shortid';\n\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deletContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = { addContact, deletContact, changeFilter };\n\nexport default contactsActions;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkName(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    resetInputForm();\n  };\n\n  const resetInputForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.some(\n      contact =>\n        contact.name.toLowerCase().trim() === name.toLowerCase().trim(),\n    );\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <input\n          className={s.name}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </label>\n      <label className={s.label}>\n        <input\n          className={s.number}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n  contacts: PropTypes.object,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <h2>Search by name</h2>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        {name}: {number}\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </p>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport ContactItem from './ContactItem';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const names = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsActions.deletContact(id));\n\n  return (\n    <ul className={s.list}>\n      {names.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  names: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport Section from '../components/Section';\n\nexport default function PhoneBookViews() {\n  const [filter, setFilter] = useState('');\n  const contacts = useSelector(getContacts);\n\n  const handleChangeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <Section title=\"Phonebook\">\n      <ContactForm />\n\n      {contacts.length > 1 && (\n        <Filter value={filter} onChangeFilter={handleChangeFilter} />\n      )}\n      <h2>Contacts</h2>\n      <ContactList />\n    </Section>\n  );\n}\n","import React from 'react';\nimport PhoneBookViews from '../views/PhoneBookViews';\n\nexport default function App() {\n  return <PhoneBookViews />;\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deletContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, contactsReducer),\n// });\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__CGOm8\",\"name\":\"ContactForm_name__2tXnF\",\"number\":\"ContactForm_number__x2fZZ\",\"button\":\"ContactForm_button__e4w70\"};"],"sourceRoot":""}